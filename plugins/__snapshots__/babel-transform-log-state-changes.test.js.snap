// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`inject state change wrapper 1`] = `
"const customSetVal = (setter, cName, sName) => val => {
  if (!global.stateStore) {
    global.stateStore = {};
  }

  const str = global.stateStore;

  if (str[cName]) {
    if (str[cName][sName]) {
      str[cName][sName].push(val);
    } else {
      str[cName][sName] = [val];
    }
  } else {
    str[cName] = {
      [sName]: [val]
    };
  }

  const vals = str[cName][sName];

  if (vals.length > 1) {
    const prevVal = vals[vals.length - 2];
    console.log(\\"%c >> StateChangeLog >>\\", \\"color: green;\\", cName, \\":\\", sName, \\":\\", prevVal, \\"=>\\", val);
  } else {
    console.log(\\"%c >> StateChangeLog >>\\", \\"color: green;\\", cName, \\":\\", sName, \\":\\", val);
  }

  return setter(val);
};

const HelloWorld = () => {
  let [val, setVal] = useState(true);
  const setVal_INTERNAL = customSetVal(setVal, \\"HelloWorld\\", \\"val\\");
  setVal = setVal_INTERNAL
  let [anotherVal, setAnotherVal] = useState(100);
  const setAnotherVal_INTERNAL = customSetVal(setAnotherVal, \\"HelloWorld\\", \\"anotherVal\\");
  setAnotherVal = setAnotherVal_INTERNAL
  return React.createElement(\\"span\\", null, \\"Hello World\\");
};"
`;
